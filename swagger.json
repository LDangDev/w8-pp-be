{
    "openapi": "3.0.0",
    "info": {
      "title": "User, TodoTask, and Tour API",
      "version": "1.0.0",
      "description": "API for managing users, todo tasks, and tours."
    },
    "servers": [
      {
        "url": "http://localhost:5000/api",
        "description": "Local development server"
      }
    ],
    "components": {
      "securitySchemes": {
        "bearerAuth": {
          "type": "http",
          "scheme": "bearer",
          "bearerFormat": "JWT"
        }
      },
      "schemas": {
        "User": {
          "type": "object",
          "required": ["name", "email", "password"],
          "properties": {
            "name": {
              "type": "string"
            },
            "email": {
              "type": "string",
              "format": "email"
            },
            "password": {
              "type": "string",
              "format": "password"
            }
          }
        },
        "TodoTask": {
          "type": "object",
          "required": ["title", "description", "dueDate", "completed", "user_id"],
          "properties": {
            "title": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "dueDate": {
              "type": "string",
              "format": "date-time"
            },
            "completed": {
              "type": "boolean"
            },
            "user_id": {
              "type": "string",
              "description": "Reference to User"
            }
          }
        },
        "Tour": {
          "type": "object",
          "required": ["name", "info", "image", "price"],
          "properties": {
            "name": {
              "type": "string"
            },
            "info": {
              "type": "string"
            },
            "image": {
              "type": "string"
            },
            "price": {
              "type": "string"
            }
          }
        }
      }
    },
    "security": [
      {
        "bearerAuth": []
      }
    ],
    "paths": {
      "/users/signup": {
        "post": {
          "summary": "Sign up a new user",
          "tags": ["Users"],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "User signed up successfully"
            },
            "400": {
              "description": "Invalid input"
            }
          },
          "security": []
        }
      },
      "/users/login": {
        "post": {
          "summary": "Login user",
          "tags": ["Users"],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "email": { "type": "string" },
                    "password": { "type": "string", "format": "password" }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Login successful"
            },
            "400": {
              "description": "Invalid credentials"
            }
          },
          "security": []
        }
      },
      "/todotasks": {
        "get": {
          "summary": "Get all todo tasks for the logged-in user",
          "tags": ["TodoTasks"],
          "responses": {
            "200": {
              "description": "List of todo tasks",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/TodoTask" }
                  }
                }
              }
            },
            "500": {
              "description": "Server error"
            }
          }
        },
        "post": {
          "summary": "Create a new todo task",
          "tags": ["TodoTasks"],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TodoTask"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Todo task created successfully"
            },
            "500": {
              "description": "Server error"
            }
          }
        }
      },
      "/todotasks/{id}": {
        "get": {
          "summary": "Get a todo task by ID",
          "tags": ["TodoTasks"],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Todo task retrieved successfully",
              "content": {
                "application/json": {
                  "schema": { "$ref": "#/components/schemas/TodoTask" }
                }
              }
            },
            "404": {
              "description": "Todo task not found"
            },
            "500": {
              "description": "Server error"
            }
          }
        },
        "put": {
          "summary": "Update a todo task by ID",
          "tags": ["TodoTasks"],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TodoTask"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Todo task updated successfully"
            },
            "404": {
              "description": "Todo task not found"
            },
            "500": {
              "description": "Server error"
            }
          }
        },
        "delete": {
          "summary": "Delete a todo task by ID",
          "tags": ["TodoTasks"],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "Todo task deleted successfully"
            },
            "404": {
              "description": "Todo task not found"
            },
            "500": {
              "description": "Server error"
            }
          }
        }
      },
      "/tours": {
        "get": {
          "summary": "Get all tours",
          "tags": ["Tours"],
          "responses": {
            "200": {
              "description": "List of tours",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/Tour" }
                  }
                }
              }
            },
            "500": {
              "description": "Failed to retrieve tours"
            }
          },
          "security": []
        },
        "post": {
          "summary": "Create a new tour",
          "tags": ["Tours"],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tour"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Tour created successfully"
            },
            "400": {
              "description": "Invalid input"
            }
          },
          "security": []
        }
      },
      "/tours/{tourId}": {
        "get": {
          "summary": "Get a tour by ID",
          "tags": ["Tours"],
          "parameters": [
            {
              "name": "tourId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Tour retrieved successfully",
              "content": {
                "application/json": {
                  "schema": { "$ref": "#/components/schemas/Tour" }
                }
              }
            },
            "404": {
              "description": "Tour not found"
            },
            "500": {
              "description": "Failed to retrieve tour"
            }
          },
          "security": []
        },
        "put": {
          "summary": "Update a tour by ID",
          "tags": ["Tours"],
          "parameters": [
            {
              "name": "tourId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tour"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Tour updated successfully"
            },
            "404": {
              "description": "Tour not found"
            },
            "500": {
              "description": "Failed to update tour"
            }
          },
          "security": []
        },
        "delete": {
          "summary": "Delete a tour by ID",
          "tags": ["Tours"],
          "parameters": [
            {
              "name": "tourId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "Tour deleted successfully"
            },
            "404": {
              "description": "Tour not found"
            },
            "500": {
              "description": "Failed to delete tour"
            }
          },
          "security": []
        }
      }
    }
  }
  